generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("USERS_DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String        @unique
  firstName   String
  lastName    String
  password    String
  address     String?
  phone       String?
  birthDate   DateTime?
  deleted     Boolean       @default(false)
  emails      UserEmail[]
  logUsername LogUsername[]
  logPassword LogPassword[]
}

model UserEmail {
  id                      String                   @id @default(auto()) @map("_id") @db.ObjectId
  email                   String                   @unique
  assignedAt              DateTime                 @default(now())
  verifiedAt              DateTime?
  revokedAt               DateTime?
  isActive                Boolean                  @default(true)
  user                    User                     @relation(fields: [userId], references: [id])
  userId                  String                   @db.ObjectId
  emailVerificationTokens EmailVerificationToken[]
  passwordResetTokens     PasswordResetToken[]
}

model EmailVerificationToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  uuid        String    @unique @default(uuid()) @map("_uuid")
  expiresAt   DateTime  @default(now())
  createdAt   DateTime  @default(now())
  revokedAt   DateTime?
  verifiedAt  DateTime?
  userEmail   UserEmail @relation(fields: [userEmailId], references: [id])
  userEmailId String    @db.ObjectId
}

model PasswordResetToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  uuid        String    @unique @default(uuid()) @map("_uuid")
  expiresAt   DateTime  @default(now())
  createdAt   DateTime  @default(now())
  revokedAt   DateTime?
  usedAt      DateTime?
  userEmail   UserEmail @relation(fields: [userEmailId], references: [id])
  userEmailId String    @db.ObjectId
}

model LogUsername {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  username   String
  assignedAt DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
}

model LogPassword {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  password   String
  assignedAt DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
}
